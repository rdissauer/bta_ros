#! /usr/bin/env python
# bta_ros configuration

PACKAGE='bta_ros'
import roslib; roslib.load_manifest(PACKAGE)


from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#Note: Reconfiguration level is currently set to 0 for all the parameters, assuming that the parameters can be changed when when the sensor is running....

#       Name			Type      	Reconfiguration level   Description	Default    	Min   	Max

gen.add("Integration_Time",	int_t,	0, "Integration time(in msec) for the sensor",1500,	100,25000)

gen.add("Frame_rate", double_t,0,"Select the camera frame rate in frame per second",15.0,1.0,160.0)

mod_freq = gen.enum([ gen.const("5MHz",		int_t,  5000000, "5MHz Modulation Frequency"),
                       gen.const("7MHz5",	int_t,  7500000, "7.5MHz Modulation Frequency"),
                       gen.const("10MHz",	int_t, 10000000, "10MHz Modulation Frequency"),
                       gen.const("15MHz",	int_t, 15000000, "15MHz Modulation Frequency"),
                       gen.const("20MHz",	int_t, 20000000, "20MHz Modulation Frequency"),
                       gen.const("25MHz",	int_t, 25000000, "25MHz Modulation Frequency"),
                       gen.const("30MHz",	int_t, 30000000, "30MHz Modulation Frequency"),
                       gen.const("12MHz",	int_t, 12000000, "12MHz Modulation Frequency")],
                     "Modulation Frequency Selector")

gen.add("PLL0", int_t, 0, "Frequency Selection for PLL0", 30000000, 5000000, 30000000, edit_method=mod_freq)
gen.add("PLL1", int_t, 0, "Frequency Selection for PLL1", 5000000, 5000000, 30000000, edit_method=mod_freq)

gen.add("Treshold_L", int_t,0,"Select the amplitude treshold",100,0,1000)
gen.add("Treshold_H", int_t,0,"Select the saturation treshold",10922,5000,16000)

gen.add("Read_reg", bool_t, 0, "Read register", False)
gen.add("Reg_addr", str_t,0,"Register address", "0x0")
gen.add("Write_reg", bool_t, 0,"Write register", False)
gen.add("Reg_val", str_t,0,"Register value", "0x0")

gen.add("Filter", bool_t, 0,"Enable/Disable Bilateral Filter", False)




exit(gen.generate(PACKAGE, "bta_ros", "bta_ros"))

